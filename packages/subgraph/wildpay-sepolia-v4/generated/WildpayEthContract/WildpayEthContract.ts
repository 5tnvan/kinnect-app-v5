// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PaymentChange extends ethereum.Event {
  get params(): PaymentChange__Params {
    return new PaymentChange__Params(this);
  }
}

export class PaymentChange__Params {
  _event: PaymentChange;

  constructor(event: PaymentChange) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newMessage(): string {
    return this._event.parameters[2].value.toString();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SaveSwitchChange extends ethereum.Event {
  get params(): SaveSwitchChange__Params {
    return new SaveSwitchChange__Params(this);
  }
}

export class SaveSwitchChange__Params {
  _event: SaveSwitchChange;

  constructor(event: SaveSwitchChange) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WithdrawChange extends ethereum.Event {
  get params(): WithdrawChange__Params {
    return new WithdrawChange__Params(this);
  }
}

export class WithdrawChange__Params {
  _event: WithdrawChange;

  constructor(event: WithdrawChange) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WildpayEthContract extends ethereum.SmartContract {
  static bind(address: Address): WildpayEthContract {
    return new WildpayEthContract("WildpayEthContract", address);
  }

  amountsReceived(param0: Address): BigInt {
    let result = super.call(
      "amountsReceived",
      "amountsReceived(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_amountsReceived(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "amountsReceived",
      "amountsReceived(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feePercentage(): BigInt {
    let result = super.call("feePercentage", "feePercentage():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feePercentage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feePercentage",
      "feePercentage():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class SaveSwitchCall extends ethereum.Call {
  get inputs(): SaveSwitchCall__Inputs {
    return new SaveSwitchCall__Inputs(this);
  }

  get outputs(): SaveSwitchCall__Outputs {
    return new SaveSwitchCall__Outputs(this);
  }
}

export class SaveSwitchCall__Inputs {
  _call: SaveSwitchCall;

  constructor(call: SaveSwitchCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SaveSwitchCall__Outputs {
  _call: SaveSwitchCall;

  constructor(call: SaveSwitchCall) {
    this._call = call;
  }
}

export class SetFeePercentageCall extends ethereum.Call {
  get inputs(): SetFeePercentageCall__Inputs {
    return new SetFeePercentageCall__Inputs(this);
  }

  get outputs(): SetFeePercentageCall__Outputs {
    return new SetFeePercentageCall__Outputs(this);
  }
}

export class SetFeePercentageCall__Inputs {
  _call: SetFeePercentageCall;

  constructor(call: SetFeePercentageCall) {
    this._call = call;
  }

  get _percentage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeePercentageCall__Outputs {
  _call: SetFeePercentageCall;

  constructor(call: SetFeePercentageCall) {
    this._call = call;
  }
}

export class SetPaymentCall extends ethereum.Call {
  get inputs(): SetPaymentCall__Inputs {
    return new SetPaymentCall__Inputs(this);
  }

  get outputs(): SetPaymentCall__Outputs {
    return new SetPaymentCall__Outputs(this);
  }
}

export class SetPaymentCall__Inputs {
  _call: SetPaymentCall;

  constructor(call: SetPaymentCall) {
    this._call = call;
  }

  get _receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _message(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetPaymentCall__Outputs {
  _call: SetPaymentCall;

  constructor(call: SetPaymentCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
