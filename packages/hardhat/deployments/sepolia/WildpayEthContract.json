{
  "address": "0x46D2DAF077aA27D5a36973deD157E340fe13AA8c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newMessage",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "PaymentChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SaveSwitchChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "WithdrawChange",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "amountsReceived",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "saveSwitch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "setFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "setPayment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb8e61deb3334a4130b84c08df3d3eb32698444feeb2e99d2832c7b36963a6536",
  "receipt": {
    "to": null,
    "from": "0x3990677113d7fd2339F85dD4b312E392b595C19f",
    "contractAddress": "0x46D2DAF077aA27D5a36973deD157E340fe13AA8c",
    "transactionIndex": 121,
    "gasUsed": "811161",
    "logsBloom": "0x
    "blockHash": "0xe4d6224a80428a082e570c4b5c039899f2768ceaa8f3fd42b4570a2cf73d22db",
    "transactionHash": "0xb8e61deb3334a4130b84c08df3d3eb32698444feeb2e99d2832c7b36963a6536",
    "logs": [
      {
        "transactionIndex": 121,
        "blockNumber": 5584995,
        "transactionHash": "0xb8e61deb3334a4130b84c08df3d3eb32698444feeb2e99d2832c7b36963a6536",
        "address": "0x46D2DAF077aA27D5a36973deD157E340fe13AA8c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000003990677113d7fd2339f85dd4b312e392b595c19f"
        ],
        "data": "0x",
        "logIndex": 190,
        "blockHash": "0xe4d6224a80428a082e570c4b5c039899f2768ceaa8f3fd42b4570a2cf73d22db"
      }
    ],
    "blockNumber": 5584995,
    "cumulativeGasUsed": "16388923",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "244a1487b5527910dca6bfd01b611d73",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMessage\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"PaymentChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SaveSwitchChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountsReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"saveSwitch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"setPayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"WildPay\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"saveSwitch(uint256)\":{\"params\":{\"_amount\":\"The amount of Ether to rescue\"}},\"setFeePercentage(uint256)\":{\"params\":{\"_percentage\":\"The new fee percentage\"}},\"setPayment(address,string)\":{\"params\":{\"_message\":\"(string memory) - optional message associated with the payment\",\"_receiver\":\"(address) - address of the receiver\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"params\":{\"_amount\":\"The amount of Ether to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"saveSwitch(uint256)\":{\"notice\":\"Function that allows the owner to rescue Ether from the contract The function can only be called by the owner \"},\"setFeePercentage(uint256)\":{\"notice\":\"Function to set the fee percentage. Can only be called by the owner.\"},\"setPayment(address,string)\":{\"notice\":\"Function that allows any wallet to send ETH to a receiver wallet, updating the amountsReceived variable\"},\"withdraw(uint256)\":{\"notice\":\"Function that allows the [msg.sender] to withdraw a custom amount of Ether they've received in the contract The function can only be called by the [msg.sender] \"}},\"notice\":\"A smart contract that allows sending of payments from a wallet to a wallet\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WildpayEthContract.sol\":\"WildpayEthContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/WildpayEthContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n/**\\n * A smart contract that allows sending of payments from a wallet to a wallet\\n * @author WildPay\\n */\\ncontract WildpayEthContract is Ownable, Pausable, ReentrancyGuard {\\n\\n    // States variables\\n    uint256 public feePercentage = 3;\\n    mapping(address => uint256) public amountsReceived;\\n\\t\\n    // Emit events\\n\\tevent PaymentChange(\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed receiver,\\n\\t\\tstring newMessage,\\n\\t\\tuint256 value,\\n        uint256 fee\\n\\t);\\n\\n\\tevent WithdrawChange(\\n\\t\\taddress wallet,\\n\\t\\tuint256 value\\n\\t);\\n\\n\\tevent SaveSwitchChange(\\n\\t\\taddress wallet,\\n\\t\\tuint256 value\\n\\t);\\n\\n\\t// Constructor: Called once on contract deployment\\n\\tconstructor() Ownable() {}\\n\\n    // Pause, unpause contract\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n\\t/**\\n     * Function to set the fee percentage.\\n     * Can only be called by the owner.\\n     *\\n     * @param _percentage The new fee percentage\\n     */\\n    function setFeePercentage(uint256 _percentage) public onlyOwner {\\n        require(_percentage <= 50, \\\"Fee percentage cannot exceed 50%\\\");\\n        feePercentage = _percentage;\\n    }\\n\\n\\t/**\\n\\t * Function that allows any wallet to send ETH to a receiver wallet, updating the amountsReceived variable\\n\\t *\\n\\t * @param _receiver (address) - address of the receiver\\n\\t * @param _message (string memory) - optional message associated with the payment\\n\\t */\\n\\tfunction setPayment(address _receiver, string memory _message) public payable whenNotPaused nonReentrant {\\n        require(msg.value > 0, \\\"Payment value must be higher than 0\\\");\\n        require(_receiver != address(0), \\\"Receiver address cannot be zero\\\");\\n\\n        // Calculate fee\\n        uint256 fee = (msg.value * feePercentage) / 100;\\n        uint256 amountAfterFee = msg.value - fee;\\n\\n        // Track amounts sent to the contract\\n        amountsReceived[_receiver] += amountAfterFee;\\n\\n        // Transfer fee to the owner\\n        payable(owner()).transfer(fee);\\n\\n        emit PaymentChange(msg.sender, _receiver, _message, amountAfterFee, fee);\\n    }\\n\\n\\n\\t/**\\n\\t * Function that allows the [msg.sender] to withdraw a custom amount of Ether they've received in the contract\\n\\t * The function can only be called by the [msg.sender]\\n\\t * \\n\\t * @param _amount The amount of Ether to withdraw\\n\\t */\\n\\tfunction withdraw(uint256 _amount) public whenNotPaused nonReentrant {\\n\\t\\trequire(_amount > 0, \\\"Withdrawal amount must be greater than 0\\\");\\n\\t\\trequire(amountsReceived[msg.sender] >= _amount, \\\"Insufficient balance for withdrawal\\\");\\n\\n\\t\\t// Update wallet owner balance\\n\\t\\tamountsReceived[msg.sender] -= _amount;\\n\\n\\t\\t// Transfer the specified amount to the wallet owner\\n        payable(msg.sender).transfer(_amount);\\n\\n\\t\\temit WithdrawChange(msg.sender, _amount);\\n\\t}\\n\\n\\t/**\\n\\t * Function that allows the owner to rescue Ether from the contract\\n\\t * The function can only be called by the owner\\n\\t * \\n\\t * @param _amount The amount of Ether to rescue\\n\\t */\\n\\tfunction saveSwitch(uint256 _amount) public onlyOwner {\\n\\t\\trequire(_amount > 0, \\\"Rescue amount must be greater than 0\\\");\\n\\t\\trequire(address(this).balance >= _amount, \\\"Insufficient balance for rescue\\\");\\n\\n\\t\\t(bool success, ) = owner().call{ value: _amount }(\\\"\\\");\\n\\t\\trequire(success, \\\"Failed to send Ether to owner\\\");\\n\\n\\t\\temit SaveSwitchChange(msg.sender, _amount);\\n\\t}\\n\\n\\t/**\\n\\t * Function that allows the contract to receive ETH\\n\\t */\\n\\treceive() external payable {}\\n}\\n\",\"keccak256\":\"0x4854a8620ef745c5a5d7eb06bd4310d1fe22b8bc5014b2e1bc8a2557428821ef\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600360025534801561001557600080fd5b5061001f33610035565b6000805460ff60a01b1916905560018055610085565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c71806100946000396000f3fe6080604052600436106100ab5760003560e01c8063a001ecdd11610064578063a001ecdd1461016f578063ae06c1b714610193578063bbff8b8d146101b3578063c34f27e4146101c6578063eb1db04a146101e6578063f2fde38b1461021357600080fd5b80632e1a7d4d146100b75780633f4ba83a146100d95780635c975abb146100ee578063715018a61461011d5780638456cb59146101325780638da5cb5b1461014757600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d2366004610a35565b610233565b005b3480156100e557600080fd5b506100d76103ab565b3480156100fa57600080fd5b50600054600160a01b900460ff1660405190151581526020015b60405180910390f35b34801561012957600080fd5b506100d76103bd565b34801561013e57600080fd5b506100d76103cf565b34801561015357600080fd5b506000546040516001600160a01b039091168152602001610114565b34801561017b57600080fd5b5061018560025481565b604051908152602001610114565b34801561019f57600080fd5b506100d76101ae366004610a35565b6103df565b6100d76101c1366004610a80565b61043d565b3480156101d257600080fd5b506100d76101e1366004610a35565b6105f3565b3480156101f257600080fd5b50610185610201366004610b42565b60036020526000908152604090205481565b34801561021f57600080fd5b506100d761022e366004610b42565b610787565b61023b6107fd565b61024361084a565b600081116102a95760405162461bcd60e51b815260206004820152602860248201527f5769746864726177616c20616d6f756e74206d75737420626520677265617465604482015267072207468616e20360c41b60648201526084015b60405180910390fd5b336000908152600360205260409020548111156103145760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e742062616c616e636520666f7220776974686472616044820152621dd85b60ea1b60648201526084016102a0565b3360009081526003602052604081208054839290610333908490610b7a565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610365573d6000803e3d6000fd5b5060408051338152602081018390527fee9aa86234b5bd20863f8b5079d5250d4dd7ff556d3503d6775f63449196cf93910160405180910390a16103a860018055565b50565b6103b36108a3565b6103bb6108fd565b565b6103c56108a3565b6103bb6000610952565b6103d76108a3565b6103bb6109a2565b6103e76108a3565b60328111156104385760405162461bcd60e51b815260206004820181905260248201527f4665652070657263656e746167652063616e6e6f74206578636565642035302560448201526064016102a0565b600255565b6104456107fd565b61044d61084a565b600034116104a95760405162461bcd60e51b815260206004820152602360248201527f5061796d656e742076616c7565206d757374206265206869676865722074686160448201526206e20360ec1b60648201526084016102a0565b6001600160a01b0382166104ff5760405162461bcd60e51b815260206004820152601f60248201527f526563656976657220616464726573732063616e6e6f74206265207a65726f0060448201526064016102a0565b60006064600254346105119190610b93565b61051b9190610baa565b905060006105298234610b7a565b6001600160a01b038516600090815260036020526040812080549293508392909190610556908490610bcc565b9091555050600080546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610594573d6000803e3d6000fd5b50836001600160a01b0316336001600160a01b03167f2d1ee7a32d3dd08ceee6bdaa62ccbef9d45a3aed57436c5353a830e51078d1508584866040516105dc93929190610bdf565b60405180910390a350506105ef60018055565b5050565b6105fb6108a3565b600081116106575760405162461bcd60e51b8152602060048201526024808201527f52657363756520616d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b60648201526084016102a0565b804710156106a75760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742062616c616e636520666f72207265736375650060448201526064016102a0565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146106f4576040519150601f19603f3d011682016040523d82523d6000602084013e6106f9565b606091505b505090508061074a5760405162461bcd60e51b815260206004820152601d60248201527f4661696c656420746f2073656e6420457468657220746f206f776e657200000060448201526064016102a0565b60408051338152602081018490527f4a34ca9c3d69dd1ec1510464659de5669ffb6c279742b69e4df9407decef8361910160405180910390a15050565b61078f6108a3565b6001600160a01b0381166107f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a0565b6103a881610952565b600054600160a01b900460ff16156103bb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102a0565b60026001540361089c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a0565b6002600155565b6000546001600160a01b031633146103bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a0565b6109056109e5565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109aa6107fd565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109353390565b600054600160a01b900460ff166103bb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102a0565b600060208284031215610a4757600080fd5b5035919050565b80356001600160a01b0381168114610a6557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a9357600080fd5b610a9c83610a4e565b9150602083013567ffffffffffffffff80821115610ab957600080fd5b818501915085601f830112610acd57600080fd5b813581811115610adf57610adf610a6a565b604051601f8201601f19908116603f01168101908382118183101715610b0757610b07610a6a565b81604052828152886020848701011115610b2057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600060208284031215610b5457600080fd5b610b5d82610a4e565b9392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b8d57610b8d610b64565b92915050565b8082028115828204841417610b8d57610b8d610b64565b600082610bc757634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610b8d57610b8d610b64565b606081526000845180606084015260005b81811015610c0d5760208188018101516080868401015201610bf0565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea2646970667358221220a9899419c3c6a4992fb1e2fd3db6de6790e96aee93542e8ac1ab3d432c3a41c564736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100ab5760003560e01c8063a001ecdd11610064578063a001ecdd1461016f578063ae06c1b714610193578063bbff8b8d146101b3578063c34f27e4146101c6578063eb1db04a146101e6578063f2fde38b1461021357600080fd5b80632e1a7d4d146100b75780633f4ba83a146100d95780635c975abb146100ee578063715018a61461011d5780638456cb59146101325780638da5cb5b1461014757600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d2366004610a35565b610233565b005b3480156100e557600080fd5b506100d76103ab565b3480156100fa57600080fd5b50600054600160a01b900460ff1660405190151581526020015b60405180910390f35b34801561012957600080fd5b506100d76103bd565b34801561013e57600080fd5b506100d76103cf565b34801561015357600080fd5b506000546040516001600160a01b039091168152602001610114565b34801561017b57600080fd5b5061018560025481565b604051908152602001610114565b34801561019f57600080fd5b506100d76101ae366004610a35565b6103df565b6100d76101c1366004610a80565b61043d565b3480156101d257600080fd5b506100d76101e1366004610a35565b6105f3565b3480156101f257600080fd5b50610185610201366004610b42565b60036020526000908152604090205481565b34801561021f57600080fd5b506100d761022e366004610b42565b610787565b61023b6107fd565b61024361084a565b600081116102a95760405162461bcd60e51b815260206004820152602860248201527f5769746864726177616c20616d6f756e74206d75737420626520677265617465604482015267072207468616e20360c41b60648201526084015b60405180910390fd5b336000908152600360205260409020548111156103145760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e742062616c616e636520666f7220776974686472616044820152621dd85b60ea1b60648201526084016102a0565b3360009081526003602052604081208054839290610333908490610b7a565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610365573d6000803e3d6000fd5b5060408051338152602081018390527fee9aa86234b5bd20863f8b5079d5250d4dd7ff556d3503d6775f63449196cf93910160405180910390a16103a860018055565b50565b6103b36108a3565b6103bb6108fd565b565b6103c56108a3565b6103bb6000610952565b6103d76108a3565b6103bb6109a2565b6103e76108a3565b60328111156104385760405162461bcd60e51b815260206004820181905260248201527f4665652070657263656e746167652063616e6e6f74206578636565642035302560448201526064016102a0565b600255565b6104456107fd565b61044d61084a565b600034116104a95760405162461bcd60e51b815260206004820152602360248201527f5061796d656e742076616c7565206d757374206265206869676865722074686160448201526206e20360ec1b60648201526084016102a0565b6001600160a01b0382166104ff5760405162461bcd60e51b815260206004820152601f60248201527f526563656976657220616464726573732063616e6e6f74206265207a65726f0060448201526064016102a0565b60006064600254346105119190610b93565b61051b9190610baa565b905060006105298234610b7a565b6001600160a01b038516600090815260036020526040812080549293508392909190610556908490610bcc565b9091555050600080546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610594573d6000803e3d6000fd5b50836001600160a01b0316336001600160a01b03167f2d1ee7a32d3dd08ceee6bdaa62ccbef9d45a3aed57436c5353a830e51078d1508584866040516105dc93929190610bdf565b60405180910390a350506105ef60018055565b5050565b6105fb6108a3565b600081116106575760405162461bcd60e51b8152602060048201526024808201527f52657363756520616d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b60648201526084016102a0565b804710156106a75760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742062616c616e636520666f72207265736375650060448201526064016102a0565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146106f4576040519150601f19603f3d011682016040523d82523d6000602084013e6106f9565b606091505b505090508061074a5760405162461bcd60e51b815260206004820152601d60248201527f4661696c656420746f2073656e6420457468657220746f206f776e657200000060448201526064016102a0565b60408051338152602081018490527f4a34ca9c3d69dd1ec1510464659de5669ffb6c279742b69e4df9407decef8361910160405180910390a15050565b61078f6108a3565b6001600160a01b0381166107f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a0565b6103a881610952565b600054600160a01b900460ff16156103bb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102a0565b60026001540361089c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a0565b6002600155565b6000546001600160a01b031633146103bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a0565b6109056109e5565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109aa6107fd565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109353390565b600054600160a01b900460ff166103bb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102a0565b600060208284031215610a4757600080fd5b5035919050565b80356001600160a01b0381168114610a6557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a9357600080fd5b610a9c83610a4e565b9150602083013567ffffffffffffffff80821115610ab957600080fd5b818501915085601f830112610acd57600080fd5b813581811115610adf57610adf610a6a565b604051601f8201601f19908116603f01168101908382118183101715610b0757610b07610a6a565b81604052828152886020848701011115610b2057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600060208284031215610b5457600080fd5b610b5d82610a4e565b9392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b8d57610b8d610b64565b92915050565b8082028115828204841417610b8d57610b8d610b64565b600082610bc757634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610b8d57610b8d610b64565b606081526000845180606084015260005b81811015610c0d5760208188018101516080868401015201610bf0565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea2646970667358221220a9899419c3c6a4992fb1e2fd3db6de6790e96aee93542e8ac1ab3d432c3a41c564736f6c63430008110033",
  "devdoc": {
    "author": "WildPay",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "saveSwitch(uint256)": {
        "params": {
          "_amount": "The amount of Ether to rescue"
        }
      },
      "setFeePercentage(uint256)": {
        "params": {
          "_percentage": "The new fee percentage"
        }
      },
      "setPayment(address,string)": {
        "params": {
          "_message": "(string memory) - optional message associated with the payment",
          "_receiver": "(address) - address of the receiver"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "params": {
          "_amount": "The amount of Ether to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "saveSwitch(uint256)": {
        "notice": "Function that allows the owner to rescue Ether from the contract The function can only be called by the owner "
      },
      "setFeePercentage(uint256)": {
        "notice": "Function to set the fee percentage. Can only be called by the owner."
      },
      "setPayment(address,string)": {
        "notice": "Function that allows any wallet to send ETH to a receiver wallet, updating the amountsReceived variable"
      },
      "withdraw(uint256)": {
        "notice": "Function that allows the [msg.sender] to withdraw a custom amount of Ether they've received in the contract The function can only be called by the [msg.sender] "
      }
    },
    "notice": "A smart contract that allows sending of payments from a wallet to a wallet",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/WildpayEthContract.sol:WildpayEthContract",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/WildpayEthContract.sol:WildpayEthContract",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 231,
        "contract": "contracts/WildpayEthContract.sol:WildpayEthContract",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 330,
        "contract": "contracts/WildpayEthContract.sol:WildpayEthContract",
        "label": "feePercentage",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 334,
        "contract": "contracts/WildpayEthContract.sol:WildpayEthContract",
        "label": "amountsReceived",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}